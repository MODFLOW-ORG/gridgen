name: gridgen compiler checks
on:
  # run at 6 AM UTC every day
  schedule:
    - cron: '0 6 * * *' 
  push:
  pull_request:
    branches:
      - master
      - develop
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  PIXI_BETA_WARNING_OFF: true
jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # test latest gcc
          - {os: ubuntu-latest, FC: gcc, FC_V: 13, shell: bash}
          - {os: macos-latest, FC: gcc, FC_V: 13, shell: bash}
          - {os: windows-latest, FC: gcc, FC_V: 13, shell: pwsh}
          # test intel-classic
          - {os: ubuntu-22.04, FC: intel-classic, FC_V: 2021.7, shell: bash}
          - {os: macos-13, FC: intel-classic, FC_V: 2021.7, shell: bash}
          - {os: windows-2019, FC: intel-classic, FC_V: 2021.7, shell: pwsh}
          # test previous gcc
          - {os: ubuntu-latest, FC: gcc, FC_V: 12, shell: bash}
          - {os: ubuntu-latest, FC: gcc, FC_V: 11, shell: bash}
          # test ifx
          - {os: ubuntu-22.04, compiler: intel, version: "2025.0", shell: bash}
          - {os: windows-2022, compiler: intel, version: "2025.0", shell: pwsh}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - name: Free Disk Space (Ubuntu)
        if: runner.os == 'Linux'
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Checkout gridgen
        uses: actions/checkout@v4
        with:
          path: gridgen

      - uses: maxim-lobanov/setup-xcode@v1
        if: ${{ (runner.os == 'macOS') && (matrix.FC == 'intel-classic') }}
        with:
          xcode-version: "14.3.1"

      - name: Setup ${{ matrix.FC }} ${{ matrix.FC_V }} on ${{ matrix.os }}
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: ${{ matrix.compiler}}
          version: ${{ matrix.version }}
          
      - name: Setup pixi
        uses: prefix-dev/setup-pixi@v0.8.14
        with:
          pixi-version: v0.41.4
          manifest-path: "gridgen/pixi.toml"

      - name: Set LDFLAGS (macOS)
        if: runner.os == 'macOS'
        run: |
          ldflags="$LDFLAGS -Wl,-ld_classic"
          echo "LDFLAGS=$ldflags" >> $GITHUB_ENV

      - name: Build gridgen
        working-directory: gridgen
        run: |
          pixi run setup
          pixi run build

      - name: Show build log
        if: failure()
        working-directory: gridgen
        run: cat builddir/meson-logs/meson-log.txt
      
      - name: Upload build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: meson-log.txt
          path: gridgen/builddir/meson-logs/meson-log.txt
    
      - name: Unit test gridgen
        if: success()
        working-directory: gridgen
        run: |
          pixi run test-initial
          pixi run test-write
          pixi run test-shapefile
          pixi run test-intersect
          pixi run test-vtk
